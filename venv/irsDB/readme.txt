Состав проекта
archivate.py - Класс для архивации БД и работы с БД в архивированном состоянии
byteimage.py - Модуль для работы с несколькими изображениями в одном масссиве байт
применяется для загрузки и выгрузки изображений из БД
chooseDB.py - Переключение моделей ORM на другую базу данных и возврат к актуальной
connWin.py - окно выбра объектов типа "стык/соединение/шов"
GUI.py - класс описывающий основное окно приложения
IRSwelding.db - основная база данных проекта. разархивация БД в прошлых состояниях происходит в папке \tmp
simServer.py - позволяет эмулировать работу сервера с ПЛК
timePDF.py - класс всплывающего окна выбора перидода для составления отчёта


Весомая часть функционала находится в дирректории mainWinFunc:
chartPainter.py - отрисовка графиков параметров сварки
loginFunc.py - функции логина и выхода из аккаунта
models.py - описание моделей данных для ORM
OPCclient.py - клиент для общения с ПЛК по протоколу OPC
pdfGenerator.py - модуль генерации отчёта о сварке по информации из БД
popUpWins.py - классы для всплывающих окон (настройки и выборы связей между объектами)
tabelVeiwers.py - интерфейс QTableWidgetItem для корректного отображения разных типов данных

Полезные команды:
pyuic5 -x base.ui -o gui.py
Перевод файла из QtDisigner в класс pyqt5
pyinstaller --onefile --icon=IRS256.ico main.py --name IRS
Сборка проекта с иконкой в IRS.exe (папка dist должна быть пуста)


Служебные файлы
requirements.txt - необходимы для запуска библиотеки с указанием их версий
для установки можно использовать:
# pip install requirements.txt #




